Namespace(batch_size=2, bits=32, checkpoint_iters=20000, clip=0.5, decoder_fuse_level=1, distance1=6, distance2=6, encoder_fuse_level=1, eval='/home/mallesh/deepvideo/data/vtl/test', eval_batch_size=1, eval_iters=100000, eval_mv='/home/mallesh/deepvideo/data/vtl/test_mv', fuse_encoder=True, gamma=0.5, gpus='0', iterations=1, load_iter=100000, load_model_name='demo', lr=0.00025, max_train_iters=100000, model_dir='../vcodec/h0/model_iters_1', num_crops=2, out_dir='vtl_output/hrch_0_itr1', patch=64, save_codes=True, save_model_name='demo', save_out_img=False, schedule='50000,60000,70000,80000,90000', shrink=2, stack=True, train='/home/mallesh/deepvideo/data/kinetics/train', train_mv='/home/mallesh/deepvideo/data/kinetics/train_mv', v_compress=True, warp=True)

Creating loader for /home/mallesh/deepvideo/data/kinetics/train...
188743 images loaded.
	distance=6/6
Loader for 188743 images (94372 batches) created.
	Encoder fuse level: 1
	Decoder fuse level: 1
	Decoder fuse level: 1
[EncoderCell(
  (conv): Conv2d(9, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
), Binarizer(
  (conv): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (sign): Sign()
), DecoderCell(
  (conv1): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), DecoderCell2(
  (conv1): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), UNet(
  (inc): inconv(
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (down1): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down2): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down3): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down4): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (up1): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up2): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up3): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up4): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
)]
Loading demo@iter 100000
Loading encoder from ../vcodec/h0/model_iters_1/demo_encoder_00100000.pth...
Loading binarizer from ../vcodec/h0/model_iters_1/demo_binarizer_00100000.pth...
Loading decoder from ../vcodec/h0/model_iters_1/demo_decoder_00100000.pth...
Loading unet from ../vcodec/h0/model_iters_1/demo_unet_00100000.pth...
Loading d2 from ../vcodec/h0/model_iters_1/demo_d2_00100000.pth...
[TRAIN] Iter[100001]; LR: 0.00025; Rec1 Loss: 0.037368; Rec2 Loss: 0.036892; Backprop: 0.0084 sec; Batch: 0.2865 sec
Start evaluation...

Creating loader for /home/mallesh/deepvideo/data/vtl/test...
136 images loaded.
	distance=6/6
Loader for 136 images (136 batches) created.
Encoding time:12265
Encoding time:12024
Encoding time:12075
Encoding time:11844
Encoding time:12010
Encoding time:12086
Encoding time:12122
Encoding time:11832
Encoding time:12009
Encoding time:12130
Encoding time:11831
Encoding time:12080
Encoding time:12075
Encoding time:11965
Encoding time:11476
Encoding time:11627
Encoding time:11753
Encoding time:11466
Encoding time:11101
Encoding time:11223
Encoding time:10974
Encoding time:11120
Encoding time:11209
Encoding time:10979
Encoding time:11083
Encoding time:11131
Encoding time:11202
Encoding time:10923
Encoding time:11083
Encoding time:11835
Encoding time:11961
Encoding time:11550
Encoding time:11303
Encoding time:11449
Encoding time:11385
Encoding time:11305
Encoding time:11126
Encoding time:11315
Encoding time:11418
Encoding time:11166
Encoding time:11575
Encoding time:11413
Encoding time:11415
Encoding time:11814
Encoding time:12139
Encoding time:11974
Encoding time:11936
Encoding time:12247
Encoding time:11949
Encoding time:12012
Encoding time:11903
Encoding time:11670
Encoding time:11897
Encoding time:11921
Encoding time:11936
Encoding time:11221
Encoding time:10894
Encoding time:11085
Encoding time:11172
Encoding time:11206
Encoding time:11167
Encoding time:10904
Encoding time:11063
Encoding time:11110
Encoding time:10472
Encoding time:10652
Encoding time:10681
Encoding time:10426
Encoding time:10622
Encoding time:10757
Encoding time:10736
Encoding time:10769
Encoding time:10694
Encoding time:10481
Encoding time:10640
Encoding time:11700
Encoding time:11548
Encoding time:11362
Encoding time:11101
Encoding time:11243
Encoding time:11319
Encoding time:11303
Encoding time:11349
Encoding time:11317
Encoding time:11087
Encoding time:11231
Encoding time:11332
Encoding time:11347
Encoding time:11978
Encoding time:11979
Encoding time:12033
Encoding time:11261
Encoding time:11240
Encoding time:11237
Encoding time:11017
Encoding time:11161
Encoding time:11278
Encoding time:11256
Encoding time:11251
Encoding time:11010
Encoding time:10883
Encoding time:10984
Encoding time:11021
Encoding time:10981
Encoding time:11001
Encoding time:10983
Encoding time:10726
Encoding time:10881
Encoding time:11027
Encoding time:10958
Encoding time:10970
Encoding time:11800
Encoding time:11601
Encoding time:11316
Encoding time:11491
Encoding time:11529
Encoding time:11534
Encoding time:11518
Encoding time:11313
Encoding time:11277
Encoding time:11025
Encoding time:11226
Encoding time:11259
Encoding time:11321
Encoding time:11253
Encoding time:11246
Encoding time:11283
Encoding time:11264
Encoding time:11275
Encoding time:11947
Encoding time:12005
Encoding time:12049
Encoding time:11337
Encoding time:11367
Encoding time:11364
Encoding time:11331
Evaluation @iter 100001 done in 21 secs
TVL Loss   : 0.04226
TVL MS-SSIM: 0.89955
TVL PSNR   : 31.09415
Training done.

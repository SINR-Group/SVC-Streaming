Namespace(batch_size=2, bits=32, checkpoint_iters=20000, clip=0.5, decoder_fuse_level=1, distance1=6, distance2=6, encoder_fuse_level=1, eval='/home/mallesh/deepvideo/data/vtl/test', eval_batch_size=1, eval_iters=100000, eval_mv='/home/mallesh/deepvideo/data/vtl/test_mv', fuse_encoder=True, gamma=0.5, gpus='0', in_dir='input', iterations=9, load_iter=100000, load_model_name='demo', lr=0.00025, max_train_iters=100000, model_dir='../vcodec/h0/model_iters_9', num_crops=2, out_dir='output', patch=64, save_codes=True, save_model_name='demo', save_out_img=True, schedule='50000,60000,70000,80000,90000', shrink=2, stack=True, train='/home/mallesh/deepvideo/data/dhf1k/train', train_mv='/home/mallesh/deepvideo/data/dhf1k/train_mv', v_compress=True, warp=True)
	Encoder fuse level: 1
	Decoder fuse level: 1
	Decoder fuse level: 1
[EncoderCell(
  (conv): Conv2d(9, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
), Binarizer(
  (conv): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (sign): Sign()
), DecoderCell(
  (conv1): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), DecoderCell2(
  (conv1): Conv2d(288, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), UNet(
  (inc): inconv(
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (down1): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down2): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down3): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down4): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (up1): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up2): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up3): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up4): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
)]
Loading demo@iter 100000
Loading encoder from ../vcodec/h0/model_iters_9/demo_encoder_00100000.pth...
Loading binarizer from ../vcodec/h0/model_iters_9/demo_binarizer_00100000.pth...
Loading decoder from ../vcodec/h0/model_iters_9/demo_decoder_00100000.pth...
Loading unet from ../vcodec/h0/model_iters_9/demo_unet_00100000.pth...
Loading d2 from ../vcodec/h0/model_iters_9/demo_d2_00100000.pth...

Creating loader for /home/mallesh/deepvideo/data/vtl/test...
136 images loaded.
	distance=6/6
Loader for 136 images (136 batches) created.
Decoding time: 15079us
Decoding time: 16784us
Decoding time: 16774us
Decoding time: 16802us
Decoding time: 16784us
Decoding time: 16738us
Decoding time: 16729us
Decoding time: 16789us
Decoding time: 16799us
Decoding time: 16757us
Decoding time: 16767us
Decoding time: 16773us
Decoding time: 16789us
Decoding time: 16783us
Decoding time: 16812us
Decoding time: 16738us
Decoding time: 16790us
Decoding time: 16752us
Decoding time: 16801us
Decoding time: 16771us
Decoding time: 16043us
Decoding time: 16779us
Decoding time: 16802us
Decoding time: 16786us
Decoding time: 16812us
Decoding time: 16808us
Decoding time: 16762us
Decoding time: 16785us
Decoding time: 16782us
Decoding time: 16755us
Decoding time: 16803us
Decoding time: 16817us
Decoding time: 16774us
Decoding time: 16789us
Decoding time: 16785us
Decoding time: 16784us
Decoding time: 16814us
Decoding time: 16786us
Decoding time: 16763us
Decoding time: 16771us
Decoding time: 16814us
Decoding time: 16759us
Decoding time: 20436us
Decoding time: 16800us
Decoding time: 16775us
Decoding time: 16744us
Decoding time: 16812us
Decoding time: 16761us
Decoding time: 16828us
Decoding time: 16768us
Decoding time: 16784us
Decoding time: 16064us
Decoding time: 16778us
Decoding time: 16734us
Decoding time: 16782us
Decoding time: 16788us
Decoding time: 16753us
Decoding time: 16803us
Decoding time: 16790us
Decoding time: 16051us
Decoding time: 16785us
Decoding time: 16018us
Decoding time: 16781us
Decoding time: 16741us
Decoding time: 16783us
Decoding time: 16760us
Decoding time: 16801us
Decoding time: 16798us
Decoding time: 16772us
Decoding time: 16790us
Decoding time: 16758us
Decoding time: 16784us
Decoding time: 16766us
Decoding time: 16775us
Decoding time: 16755us
Decoding time: 16771us
Decoding time: 16031us
Decoding time: 16736us
Decoding time: 16759us
Decoding time: 16773us
Decoding time: 16805us
Decoding time: 16724us
Decoding time: 16757us
Decoding time: 16767us
Decoding time: 16781us
Decoding time: 16762us
Decoding time: 16743us
Decoding time: 16782us
Decoding time: 16776us
Decoding time: 16742us
Decoding time: 16055us
Decoding time: 16006us
Decoding time: 16804us
Decoding time: 16048us
Decoding time: 16791us
Decoding time: 16793us
Decoding time: 16746us
Decoding time: 16774us
Decoding time: 16739us
Decoding time: 16805us
Decoding time: 16781us
Decoding time: 16795us
Decoding time: 16789us
Decoding time: 16768us
Decoding time: 16792us
Decoding time: 16790us
Decoding time: 16761us
Decoding time: 16767us
Decoding time: 16795us
Decoding time: 16786us
Decoding time: 16776us
Decoding time: 16820us
Decoding time: 16770us
Decoding time: 16766us
Decoding time: 16057us
Decoding time: 16767us
Decoding time: 16805us
Decoding time: 16761us
Decoding time: 16757us
Decoding time: 16767us
Decoding time: 16783us
Decoding time: 16778us
Decoding time: 16780us
Decoding time: 16793us
Decoding time: 16778us
Decoding time: 16734us
Decoding time: 16790us
Decoding time: 16780us
Decoding time: 16799us
Decoding time: 16069us
Decoding time: 16789us
Decoding time: 16744us
Decoding time: 16712us
Decoding time: 16699us
Decoding time: 16634us
Decoding time: 16716us
Evaluation @iter 100000 done in 22 secs
TVL Loss   : 
TVL MS-SSIM: 0.94913
TVL PSNR   : 31.96018
Namespace(batch_size=2, bits=32, checkpoint_iters=20000, clip=0.5, decoder_fuse_level=3, distance1=3, distance2=3, encoder_fuse_level=2, eval='/home/mallesh/deepvideo/data/vtl/test', eval_batch_size=1, eval_iters=100000, eval_mv='/home/mallesh/deepvideo/data/vtl/test_mv', fuse_encoder=True, gamma=0.5, gpus='0', in_dir='input', iterations=9, load_iter=100000, load_model_name='demo', lr=0.00025, max_train_iters=100000, model_dir='../vcodec/h1/model_iters_9', num_crops=2, out_dir='output', patch=64, save_codes=True, save_model_name='demo', save_out_img=True, schedule='50000,60000,70000,80000,90000', shrink=2, stack=True, train='/home/mallesh/deepvideo/data/dhf1k/train', train_mv='/home/mallesh/deepvideo/data/dhf1k/train_mv', v_compress=True, warp=True)
	Encoder fuse level: 2
	Decoder fuse level: 3
	Decoder fuse level: 3
[EncoderCell(
  (conv): Conv2d(9, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(384, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
), Binarizer(
  (conv): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (sign): Sign()
), DecoderCell(
  (conv1): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(384, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), DecoderCell2(
  (conv1): Conv2d(288, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(384, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), UNet(
  (inc): inconv(
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (down1): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down2): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down3): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down4): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (up1): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up2): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up3): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up4): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
)]
Loading demo@iter 100000
Loading encoder from ../vcodec/h1/model_iters_9/demo_encoder_00100000.pth...
Loading binarizer from ../vcodec/h1/model_iters_9/demo_binarizer_00100000.pth...
Loading decoder from ../vcodec/h1/model_iters_9/demo_decoder_00100000.pth...
Loading unet from ../vcodec/h1/model_iters_9/demo_unet_00100000.pth...
Loading d2 from ../vcodec/h1/model_iters_9/demo_d2_00100000.pth...

Creating loader for /home/mallesh/deepvideo/data/vtl/test...
272 images loaded.
	distance=3/3
Loader for 272 images (272 batches) created.
Decoding time: 27710us
Decoding time: 18902us
Decoding time: 46238us
Decoding time: 18927us
Decoding time: 41838us
Decoding time: 22667us
Decoding time: 18894us
Decoding time: 41489us
Decoding time: 17859us
Decoding time: 18832us
Decoding time: 18895us
Decoding time: 18905us
Decoding time: 18820us
Decoding time: 18891us
Decoding time: 18906us
Decoding time: 18856us
Decoding time: 18876us
Decoding time: 18874us
Decoding time: 18903us
Decoding time: 18883us
Decoding time: 18842us
Decoding time: 18801us
Decoding time: 18830us
Decoding time: 18785us
Decoding time: 18797us
Decoding time: 18779us
Decoding time: 18782us
Decoding time: 18823us
Decoding time: 18786us
Decoding time: 18806us
Decoding time: 18826us
Decoding time: 18873us
Decoding time: 18826us
Decoding time: 18853us
Decoding time: 18797us
Decoding time: 18822us
Decoding time: 18849us
Decoding time: 18806us
Decoding time: 18851us
Decoding time: 18910us
Decoding time: 18875us
Decoding time: 18886us
Decoding time: 18882us
Decoding time: 18853us
Decoding time: 18843us
Decoding time: 18782us
Decoding time: 18874us
Decoding time: 18858us
Decoding time: 18813us
Decoding time: 18837us
Decoding time: 18884us
Decoding time: 18858us
Decoding time: 18882us
Decoding time: 18854us
Decoding time: 18869us
Decoding time: 18920us
Decoding time: 18860us
Decoding time: 18884us
Decoding time: 18881us
Decoding time: 18890us
Decoding time: 18846us
Decoding time: 18850us
Decoding time: 18924us
Decoding time: 18846us
Decoding time: 18929us
Decoding time: 18848us
Decoding time: 18852us
Decoding time: 18862us
Decoding time: 18850us
Decoding time: 18860us
Decoding time: 18828us
Decoding time: 18823us
Decoding time: 18796us
Decoding time: 18870us
Decoding time: 18870us
Decoding time: 18859us
Decoding time: 18850us
Decoding time: 18859us
Decoding time: 18863us
Decoding time: 18847us
Decoding time: 18877us
Decoding time: 18922us
Decoding time: 18839us
Decoding time: 18869us
Decoding time: 18815us
Decoding time: 18874us
Decoding time: 18799us
Decoding time: 18911us
Decoding time: 18906us
Decoding time: 18806us
Decoding time: 18804us
Decoding time: 18773us
Decoding time: 18889us
Decoding time: 18783us
Decoding time: 18903us
Decoding time: 18793us
Decoding time: 18760us
Decoding time: 18849us
Decoding time: 18955us
Decoding time: 18804us
Decoding time: 18804us
Decoding time: 18777us
Decoding time: 18843us
Decoding time: 18842us
Decoding time: 18870us
Decoding time: 18765us
Decoding time: 18822us
Decoding time: 18805us
Decoding time: 18876us
Decoding time: 18807us
Decoding time: 18895us
Decoding time: 18754us
Decoding time: 18856us
Decoding time: 18867us
Decoding time: 18803us
Decoding time: 18809us
Decoding time: 18766us
Decoding time: 18771us
Decoding time: 18878us
Decoding time: 19120us
Decoding time: 18776us
Decoding time: 18805us
Decoding time: 18830us
Decoding time: 18874us
Decoding time: 18896us
Decoding time: 18885us
Decoding time: 18872us
Decoding time: 18899us
Decoding time: 18870us
Decoding time: 18868us
Decoding time: 18883us
Decoding time: 18860us
Decoding time: 18873us
Decoding time: 18943us
Decoding time: 18892us
Decoding time: 18858us
Decoding time: 18925us
Decoding time: 18893us
Decoding time: 18922us
Decoding time: 18865us
Decoding time: 18934us
Decoding time: 18832us
Decoding time: 18866us
Decoding time: 18878us
Decoding time: 18861us
Decoding time: 18849us
Decoding time: 18863us
Decoding time: 18896us
Decoding time: 18901us
Decoding time: 18887us
Decoding time: 18849us
Decoding time: 18841us
Decoding time: 18914us
Decoding time: 18863us
Decoding time: 18911us
Decoding time: 18868us
Decoding time: 18867us
Decoding time: 18879us
Decoding time: 18890us
Decoding time: 18886us
Decoding time: 18906us
Decoding time: 18908us
Decoding time: 18845us
Decoding time: 18851us
Decoding time: 18951us
Decoding time: 18914us
Decoding time: 18918us
Decoding time: 18875us
Decoding time: 18879us
Decoding time: 18884us
Decoding time: 18879us
Decoding time: 18845us
Decoding time: 18882us
Decoding time: 18876us
Decoding time: 18875us
Decoding time: 18844us
Decoding time: 18853us
Decoding time: 18907us
Decoding time: 18889us
Decoding time: 18843us
Decoding time: 18903us
Decoding time: 18848us
Decoding time: 18867us
Decoding time: 18823us
Decoding time: 18897us
Decoding time: 18799us
Decoding time: 18830us
Decoding time: 18828us
Decoding time: 18902us
Decoding time: 18892us
Decoding time: 18812us
Decoding time: 17919us
Decoding time: 18892us
Decoding time: 18810us
Decoding time: 18893us
Decoding time: 18888us
Decoding time: 18862us
Decoding time: 18852us
Decoding time: 18849us
Decoding time: 18810us
Decoding time: 18830us
Decoding time: 18871us
Decoding time: 18877us
Decoding time: 18868us
Decoding time: 18861us
Decoding time: 18901us
Decoding time: 18864us
Decoding time: 18781us
Decoding time: 18894us
Decoding time: 18880us
Decoding time: 17875us
Decoding time: 18877us
Decoding time: 18833us
Decoding time: 18819us
Decoding time: 18920us
Decoding time: 17796us
Decoding time: 17851us
Decoding time: 17788us
Decoding time: 17806us
Decoding time: 17851us
Decoding time: 17839us
Decoding time: 17923us
Decoding time: 17779us
Decoding time: 17841us
Decoding time: 17945us
Decoding time: 17821us
Decoding time: 17780us
Decoding time: 17839us
Decoding time: 17796us
Decoding time: 17827us
Decoding time: 17794us
Decoding time: 18049us
Decoding time: 17845us
Decoding time: 18062us
Decoding time: 17882us
Decoding time: 17806us
Decoding time: 17847us
Decoding time: 17829us
Decoding time: 17843us
Decoding time: 17871us
Decoding time: 17908us
Decoding time: 17870us
Decoding time: 18210us
Decoding time: 17828us
Decoding time: 17876us
Decoding time: 17877us
Decoding time: 17828us
Decoding time: 17802us
Decoding time: 17856us
Decoding time: 17843us
Decoding time: 19263us
Decoding time: 18802us
Decoding time: 18900us
Decoding time: 18879us
Decoding time: 18874us
Decoding time: 18861us
Decoding time: 18832us
Decoding time: 18853us
Decoding time: 18863us
Decoding time: 18865us
Decoding time: 18850us
Decoding time: 18874us
Decoding time: 18836us
Decoding time: 18836us
Decoding time: 18884us
Decoding time: 18878us
Decoding time: 18868us
Decoding time: 18784us
Decoding time: 18790us
Decoding time: 18777us
Decoding time: 18826us
Decoding time: 18841us
Evaluation @iter 100000 done in 46 secs
TVL Loss   : 
TVL MS-SSIM: 0.92604
TVL PSNR   : 31.68168
Namespace(batch_size=2, bits=32, checkpoint_iters=20000, clip=0.5, decoder_fuse_level=1, distance1=1, distance2=2, encoder_fuse_level=1, eval='/home/mallesh/deepvideo/data/vtl/test', eval_batch_size=1, eval_iters=100000, eval_mv='/home/mallesh/deepvideo/data/vtl/test_mv', fuse_encoder=True, gamma=0.5, gpus='0', in_dir='input', iterations=9, load_iter=100000, load_model_name='demo', lr=0.00025, max_train_iters=100000, model_dir='../vcodec/h2/model_iters_9', num_crops=2, out_dir='output', patch=64, save_codes=True, save_model_name='demo', save_out_img=True, schedule='50000,60000,70000,80000,90000', shrink=2, stack=True, train='/home/mallesh/deepvideo/data/dhf1k/train', train_mv='/home/mallesh/deepvideo/data/dhf1k/train_mv', v_compress=True, warp=True)
	Encoder fuse level: 1
	Decoder fuse level: 1
	Decoder fuse level: 1
[EncoderCell(
  (conv): Conv2d(9, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), hidden_kernel_size=(1, 1))
), Binarizer(
  (conv): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (sign): Sign()
), DecoderCell(
  (conv1): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), DecoderCell2(
  (conv1): Conv2d(288, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (rnn1): ConvLSTMCell(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn2): ConvLSTMCell(128, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(1, 1))
  (rnn3): ConvLSTMCell(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (rnn4): ConvLSTMCell(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), hidden_kernel_size=(3, 3))
  (conv2): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1), bias=False)
), UNet(
  (inc): inconv(
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (down1): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down2): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down3): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (down4): down(
    (mpconv): Sequential(
      (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (1): double_conv(
        (conv): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  (up1): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up2): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up3): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
  (up4): up(
    (up): UpsamplingBilinear2d(scale_factor=2.0, mode=bilinear)
    (conv): double_conv(
      (conv): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
    )
  )
)]
Loading demo@iter 100000
Loading encoder from ../vcodec/h2/model_iters_9/demo_encoder_00100000.pth...
Loading binarizer from ../vcodec/h2/model_iters_9/demo_binarizer_00100000.pth...
Loading decoder from ../vcodec/h2/model_iters_9/demo_decoder_00100000.pth...
Loading unet from ../vcodec/h2/model_iters_9/demo_unet_00100000.pth...
Loading d2 from ../vcodec/h2/model_iters_9/demo_d2_00100000.pth...

Creating loader for /home/mallesh/deepvideo/data/vtl/test...
1088 images loaded.
	distance=1/2
Loader for 1088 images (1088 batches) created.
Decoding time: 15412us
Decoding time: 16748us
Decoding time: 16691us
Decoding time: 16686us
Decoding time: 16696us
Decoding time: 16705us
Decoding time: 16632us
Decoding time: 16726us
Decoding time: 16741us
Decoding time: 16704us
Decoding time: 16730us
Decoding time: 16747us
Decoding time: 16704us
Decoding time: 16694us
Decoding time: 16714us
Decoding time: 16708us
Decoding time: 16681us
Decoding time: 16659us
Decoding time: 16688us
Decoding time: 16696us
Decoding time: 16698us
Decoding time: 16693us
Decoding time: 16692us
Decoding time: 16669us
Decoding time: 16721us
Decoding time: 16644us
Decoding time: 16734us
Decoding time: 16702us
Decoding time: 16722us
Decoding time: 16673us
Decoding time: 16706us
Decoding time: 16647us
Decoding time: 16729us
Decoding time: 16673us
Decoding time: 16698us
Decoding time: 16688us
Decoding time: 16696us
Decoding time: 16695us
Decoding time: 16738us
Decoding time: 16683us
Decoding time: 16707us
Decoding time: 16714us
Decoding time: 16704us
Decoding time: 16634us
Decoding time: 16701us
Decoding time: 16711us
Decoding time: 16713us
Decoding time: 16709us
Decoding time: 16736us
Decoding time: 16703us
Decoding time: 16736us
Decoding time: 16663us
Decoding time: 16684us
Decoding time: 16649us
Decoding time: 16707us
Decoding time: 16706us
Decoding time: 16683us
Decoding time: 16681us
Decoding time: 16700us
Decoding time: 16702us
Decoding time: 16702us
Decoding time: 16660us
Decoding time: 16680us
Decoding time: 15930us
Decoding time: 16722us
Decoding time: 16657us
Decoding time: 16708us
Decoding time: 16694us
Decoding time: 16734us
Decoding time: 16693us
Decoding time: 16740us
Decoding time: 16683us
Decoding time: 16739us
Decoding time: 16674us
Decoding time: 16733us
Decoding time: 16671us
Decoding time: 16711us
Decoding time: 16703us
Decoding time: 23897us
Decoding time: 16681us
Decoding time: 16719us
Decoding time: 16694us
Decoding time: 16719us
Decoding time: 16690us
Decoding time: 16694us
Decoding time: 16716us
Decoding time: 16694us
Decoding time: 16715us
Decoding time: 16699us
Decoding time: 15887us
Decoding time: 16694us
Decoding time: 16674us
Decoding time: 16681us
Decoding time: 16765us
Decoding time: 16689us
Decoding time: 16703us
Decoding time: 16724us
Decoding time: 16673us
Decoding time: 16685us
Decoding time: 16719us
Decoding time: 16698us
Decoding time: 16679us
Decoding time: 16705us
Decoding time: 16695us
Decoding time: 16690us
Decoding time: 16684us
Decoding time: 16753us
Decoding time: 16706us
Decoding time: 16741us
Decoding time: 16668us
Decoding time: 16726us
Decoding time: 16702us
Decoding time: 16726us
Decoding time: 16685us
Decoding time: 16712us
Decoding time: 16695us
Decoding time: 16715us
Decoding time: 16709us
Decoding time: 16712us
Decoding time: 16703us
Decoding time: 16709us
Decoding time: 16695us
Decoding time: 16691us
Decoding time: 16735us
Decoding time: 16731us
Decoding time: 16690us
Decoding time: 16710us
Decoding time: 16696us
Decoding time: 16741us
Decoding time: 16705us
Decoding time: 16681us
Decoding time: 16732us
Decoding time: 16705us
Decoding time: 16691us
Decoding time: 16728us
Decoding time: 16703us
Decoding time: 16751us
Decoding time: 16674us
Decoding time: 16729us
Decoding time: 16695us
Decoding time: 16739us
Decoding time: 16688us
Decoding time: 16700us
Decoding time: 16696us
Decoding time: 16731us
Decoding time: 16697us
Decoding time: 16716us
Decoding time: 16700us
Decoding time: 16727us
Decoding time: 16706us
Decoding time: 16705us
Decoding time: 16712us
Decoding time: 16709us
Decoding time: 16701us
Decoding time: 16729us
Decoding time: 16695us
Decoding time: 16708us
Decoding time: 16698us
Decoding time: 16723us
Decoding time: 16710us
Decoding time: 16714us
Decoding time: 16696us
Decoding time: 16705us
Decoding time: 16702us
Decoding time: 15889us
Decoding time: 16667us
Decoding time: 16690us
Decoding time: 16675us
Decoding time: 16659us
Decoding time: 16690us
Decoding time: 16716us
Decoding time: 16658us
Decoding time: 16675us
Decoding time: 16675us
Decoding time: 16692us
Decoding time: 16646us
Decoding time: 16713us
Decoding time: 16705us
Decoding time: 16690us
Decoding time: 16677us
Decoding time: 16689us
Decoding time: 16690us
Decoding time: 16663us
Decoding time: 16677us
Decoding time: 16704us
Decoding time: 15902us
Decoding time: 16663us
Decoding time: 16689us
Decoding time: 16688us
Decoding time: 16688us
Decoding time: 16678us
Decoding time: 16668us
Decoding time: 16713us
Decoding time: 16661us
Decoding time: 16701us
Decoding time: 16678us
Decoding time: 16728us
Decoding time: 16661us
Decoding time: 16687us
Decoding time: 16666us
Decoding time: 16669us
Decoding time: 16689us
Decoding time: 16664us
Decoding time: 16680us
Decoding time: 16640us
Decoding time: 16666us
Decoding time: 16747us
Decoding time: 16683us
Decoding time: 16683us
Decoding time: 16666us
Decoding time: 16674us
Decoding time: 16678us
Decoding time: 16677us
Decoding time: 16662us
Decoding time: 16702us
Decoding time: 16689us
Decoding time: 16691us
Decoding time: 16684us
Decoding time: 16706us
Decoding time: 16662us
Decoding time: 16669us
Decoding time: 16672us
Decoding time: 16691us
Decoding time: 16661us
Decoding time: 16705us
Decoding time: 16670us
Decoding time: 16701us
Decoding time: 16720us
Decoding time: 16734us
Decoding time: 16730us
Decoding time: 16730us
Decoding time: 16698us
Decoding time: 16673us
Decoding time: 16684us
Decoding time: 16636us
Decoding time: 16688us
Decoding time: 16734us
Decoding time: 16649us
Decoding time: 16649us
Decoding time: 16681us
Decoding time: 16731us
Decoding time: 16707us
Decoding time: 16700us
Decoding time: 16685us
Decoding time: 16706us
Decoding time: 16731us
Decoding time: 16687us
Decoding time: 16734us
Decoding time: 16709us
Decoding time: 16703us
Decoding time: 16704us
Decoding time: 16707us
Decoding time: 16647us
Decoding time: 16685us
Decoding time: 16682us
Decoding time: 16689us
Decoding time: 16686us
Decoding time: 16690us
Decoding time: 16692us
Decoding time: 16732us
Decoding time: 16691us
Decoding time: 16695us
Decoding time: 16674us
Decoding time: 16697us
Decoding time: 16677us
Decoding time: 16738us
Decoding time: 16717us
Decoding time: 16674us
Decoding time: 16687us
Decoding time: 16724us
Decoding time: 16689us
Decoding time: 16658us
Decoding time: 16695us
Decoding time: 16682us
Decoding time: 16668us
Decoding time: 16689us
Decoding time: 16717us
Decoding time: 16648us
Decoding time: 16679us
Decoding time: 16678us
Decoding time: 16694us
Decoding time: 16677us
Decoding time: 16647us
Decoding time: 16651us
Decoding time: 16669us
Decoding time: 16648us
Decoding time: 15884us
Decoding time: 16684us
Decoding time: 16670us
Decoding time: 16687us
Decoding time: 16660us
Decoding time: 16637us
Decoding time: 15891us
Decoding time: 16673us
Decoding time: 16656us
Decoding time: 16670us
Decoding time: 16639us
Decoding time: 16642us
Decoding time: 16684us
Decoding time: 16694us
Decoding time: 16697us
Decoding time: 16688us
Decoding time: 16667us
Decoding time: 16653us
Decoding time: 16646us
Decoding time: 16663us
Decoding time: 16694us
Decoding time: 16648us
Decoding time: 16670us
Decoding time: 16674us
Decoding time: 16686us
Decoding time: 16651us
Decoding time: 16700us
Decoding time: 16651us
Decoding time: 16643us
Decoding time: 16669us
Decoding time: 16650us
Decoding time: 16694us
Decoding time: 16713us
Decoding time: 16697us
Decoding time: 16699us
Decoding time: 16686us
Decoding time: 16681us
Decoding time: 16674us
Decoding time: 16713us
Decoding time: 16636us
Decoding time: 16624us
Decoding time: 16690us
Decoding time: 16710us
Decoding time: 16638us
Decoding time: 16718us
Decoding time: 16678us
Decoding time: 16715us
Decoding time: 16679us
Decoding time: 15939us
Decoding time: 16664us
Decoding time: 16700us
Decoding time: 16709us
Decoding time: 16661us
Decoding time: 16634us
Decoding time: 16654us
Decoding time: 16683us
Decoding time: 16632us
Decoding time: 16657us
Decoding time: 16680us
Decoding time: 16699us
Decoding time: 16700us
Decoding time: 16650us
Decoding time: 16688us
Decoding time: 22293us
Decoding time: 16674us
Decoding time: 16709us
Decoding time: 16730us
Decoding time: 16679us
Decoding time: 16697us
Decoding time: 15937us
Decoding time: 16723us
Decoding time: 16699us
Decoding time: 16672us
Decoding time: 16672us
Decoding time: 16694us
Decoding time: 16652us
Decoding time: 16711us
Decoding time: 16674us
Decoding time: 16675us
Decoding time: 16724us
Decoding time: 16692us
Decoding time: 16676us
Decoding time: 16680us
Decoding time: 16701us
Decoding time: 16707us
Decoding time: 16705us
Decoding time: 16688us
Decoding time: 16693us
Decoding time: 16721us
Decoding time: 16707us
Decoding time: 16660us
Decoding time: 15816us
Decoding time: 15847us
Decoding time: 15906us
Decoding time: 15964us
Decoding time: 15906us
Decoding time: 15926us
Decoding time: 15881us
Decoding time: 15949us
Decoding time: 15964us
Decoding time: 15967us
Decoding time: 15896us
Decoding time: 15873us
Decoding time: 15905us
Decoding time: 15881us
Decoding time: 15931us
Decoding time: 15907us
Decoding time: 15913us
Decoding time: 15943us
Decoding time: 15921us
Decoding time: 15882us
Decoding time: 15939us
Decoding time: 15925us
Decoding time: 15914us
Decoding time: 15936us
Decoding time: 15954us
Decoding time: 15870us
Decoding time: 15915us
Decoding time: 15930us
Decoding time: 15965us
Decoding time: 15959us
Decoding time: 15949us
Decoding time: 15906us
Decoding time: 16679us
Decoding time: 15790us
Decoding time: 16703us
Decoding time: 16653us
Decoding time: 16641us
Decoding time: 16679us
Decoding time: 16688us
Decoding time: 16710us
Decoding time: 16652us
Decoding time: 16671us
Decoding time: 16647us
Decoding time: 15916us
Decoding time: 15886us
Decoding time: 15867us
Decoding time: 15926us
Decoding time: 15926us
Decoding time: 15903us
Decoding time: 15921us
Decoding time: 15897us
Decoding time: 15894us
Decoding time: 15886us
Decoding time: 15933us
Decoding time: 15867us
Decoding time: 15918us
Decoding time: 15911us
Decoding time: 15917us
Decoding time: 15929us
Decoding time: 15922us
Decoding time: 15897us
Decoding time: 15897us
Decoding time: 15889us
Decoding time: 15943us
Decoding time: 15859us
Decoding time: 16681us
Decoding time: 16685us
Decoding time: 16683us
Decoding time: 16642us
Decoding time: 16683us
Decoding time: 16691us
Decoding time: 16656us
Decoding time: 16694us
Decoding time: 16696us
Decoding time: 16682us
Decoding time: 16690us
Decoding time: 16650us
Decoding time: 16696us
Decoding time: 16678us
Decoding time: 16705us
Decoding time: 16685us
Decoding time: 16676us
Decoding time: 16670us
Decoding time: 16682us
Decoding time: 16685us
Decoding time: 16674us
Decoding time: 16705us
Decoding time: 16649us
Decoding time: 16687us
Decoding time: 16710us
Decoding time: 16687us
Decoding time: 16721us
Decoding time: 16671us
Decoding time: 16678us
Decoding time: 16681us
Decoding time: 16708us
Decoding time: 16673us
Decoding time: 16731us
Decoding time: 16683us
Decoding time: 16685us
Decoding time: 16675us
Decoding time: 16633us
Decoding time: 16636us
Decoding time: 16715us
Decoding time: 16663us
Decoding time: 16719us
Decoding time: 16665us
Decoding time: 15907us
Decoding time: 16681us
Decoding time: 16724us
Decoding time: 16699us
Decoding time: 16696us
Decoding time: 16654us
Decoding time: 16644us
Decoding time: 16672us
Decoding time: 16719us
Decoding time: 16667us
Decoding time: 16628us
Decoding time: 16683us
Decoding time: 16671us
Decoding time: 16662us
Decoding time: 16650us
Decoding time: 16669us
Decoding time: 16645us
Decoding time: 16650us
Decoding time: 16666us
Decoding time: 16670us
Decoding time: 16649us
Decoding time: 16662us
Decoding time: 16689us
Decoding time: 16658us
Decoding time: 16634us
Decoding time: 16666us
Decoding time: 16702us
Decoding time: 16629us
Decoding time: 16695us
Decoding time: 16683us
Decoding time: 16681us
Decoding time: 16656us
Decoding time: 16685us
Decoding time: 16628us
Decoding time: 16644us
Decoding time: 16698us
Decoding time: 16633us
Decoding time: 16642us
Decoding time: 16676us
Decoding time: 16665us
Decoding time: 16657us
Decoding time: 16649us
Decoding time: 16624us
Decoding time: 16651us
Decoding time: 16610us
Decoding time: 16628us
Decoding time: 16618us
Decoding time: 16680us
Decoding time: 16668us
Decoding time: 16669us
Decoding time: 16682us
Decoding time: 16645us
Decoding time: 16701us
Decoding time: 16671us
Decoding time: 16675us
Decoding time: 16674us
Decoding time: 16683us
Decoding time: 16663us
Decoding time: 16672us
Decoding time: 16660us
Decoding time: 16688us
Decoding time: 16631us
Decoding time: 16691us
Decoding time: 16683us
Decoding time: 16647us
Decoding time: 16649us
Decoding time: 16637us
Decoding time: 16594us
Decoding time: 16693us
Decoding time: 16639us
Decoding time: 16681us
Decoding time: 16647us
Decoding time: 16639us
Decoding time: 16660us
Decoding time: 16674us
Decoding time: 16684us
Decoding time: 16665us
Decoding time: 16674us
Decoding time: 16658us
Decoding time: 16693us
Decoding time: 16662us
Decoding time: 16670us
Decoding time: 16672us
Decoding time: 16634us
Decoding time: 16667us
Decoding time: 16648us
Decoding time: 16658us
Decoding time: 16710us
Decoding time: 16674us
Decoding time: 16673us
Decoding time: 16696us
Decoding time: 16669us
Decoding time: 16622us
Decoding time: 16670us
Decoding time: 16722us
Decoding time: 16670us
Decoding time: 16647us
Decoding time: 16654us
Decoding time: 16689us
Decoding time: 16642us
Decoding time: 16635us
Decoding time: 16711us
Decoding time: 16659us
Decoding time: 16706us
Decoding time: 16682us
Decoding time: 16636us
Decoding time: 16607us
Decoding time: 16675us
Decoding time: 16641us
Decoding time: 16705us
Decoding time: 16684us
Decoding time: 16695us
Decoding time: 16720us
Decoding time: 16678us
Decoding time: 16665us
Decoding time: 16662us
Decoding time: 16645us
Decoding time: 16662us
Decoding time: 16688us
Decoding time: 18889us
Decoding time: 16692us
Decoding time: 16658us
Decoding time: 16668us
Decoding time: 16655us
Decoding time: 16687us
Decoding time: 16624us
Decoding time: 16678us
Decoding time: 16645us
Decoding time: 16690us
Decoding time: 16645us
Decoding time: 16704us
Decoding time: 16695us
Decoding time: 16676us
Decoding time: 16659us
Decoding time: 16694us
Decoding time: 16647us
Decoding time: 16706us
Decoding time: 16623us
Decoding time: 16711us
Decoding time: 16663us
Decoding time: 16647us
Decoding time: 16711us
Decoding time: 16730us
Decoding time: 16693us
Decoding time: 16678us
Decoding time: 16657us
Decoding time: 16701us
Decoding time: 15918us
Decoding time: 16667us
Decoding time: 16647us
Decoding time: 16702us
Decoding time: 16655us
Decoding time: 16673us
Decoding time: 16688us
Decoding time: 16705us
Decoding time: 16634us
Decoding time: 16675us
Decoding time: 15901us
Decoding time: 16672us
Decoding time: 15901us
Decoding time: 16711us
Decoding time: 15884us
Decoding time: 16685us
Decoding time: 15943us
Decoding time: 16735us
Decoding time: 16688us
Decoding time: 16722us
Decoding time: 16699us
Decoding time: 16733us
Decoding time: 16680us
Decoding time: 15908us
Decoding time: 15889us
Decoding time: 15888us
Decoding time: 15874us
Decoding time: 15879us
Decoding time: 15851us
Decoding time: 15859us
Decoding time: 15891us
Decoding time: 15987us
Decoding time: 15970us
Decoding time: 15908us
Decoding time: 15888us
Decoding time: 15886us
Decoding time: 15804us
Decoding time: 15901us
Decoding time: 15924us
Decoding time: 15921us
Decoding time: 16670us
Decoding time: 16661us
Decoding time: 16679us
Decoding time: 16680us
Decoding time: 16710us
Decoding time: 16684us
Decoding time: 16686us
Decoding time: 16717us
Decoding time: 16621us
Decoding time: 16708us
Decoding time: 16649us
Decoding time: 16674us
Decoding time: 16697us
Decoding time: 15876us
Decoding time: 16691us
Decoding time: 15999us
Decoding time: 16691us
Decoding time: 15877us
Decoding time: 16680us
Decoding time: 16702us
Decoding time: 16642us
Decoding time: 16686us
Decoding time: 16677us
Decoding time: 16706us
Decoding time: 16694us
Decoding time: 16696us
Decoding time: 16719us
Decoding time: 16669us
Decoding time: 16673us
Decoding time: 15961us
Decoding time: 15845us
Decoding time: 15883us
Decoding time: 15848us
Decoding time: 15912us
Decoding time: 15771us
Decoding time: 15929us
Decoding time: 15939us
Decoding time: 15956us
Decoding time: 15973us
Decoding time: 15928us
Decoding time: 15850us
Decoding time: 15935us
Decoding time: 15829us
Decoding time: 15878us
Decoding time: 15843us
Decoding time: 15886us
Decoding time: 15752us
Decoding time: 15955us
Decoding time: 15899us
Decoding time: 15947us
Decoding time: 15861us
Decoding time: 15876us
Decoding time: 15907us
Decoding time: 15878us
Decoding time: 15794us
Decoding time: 15943us
Decoding time: 16643us
Decoding time: 16730us
Decoding time: 16670us
Decoding time: 16677us
Decoding time: 16697us
Decoding time: 16671us
Decoding time: 16695us
Decoding time: 16681us
Decoding time: 16674us
Decoding time: 16695us
Decoding time: 16665us
Decoding time: 16725us
Decoding time: 16654us
Decoding time: 16631us
Decoding time: 16647us
Decoding time: 16755us
Decoding time: 16680us
Decoding time: 16709us
Decoding time: 16680us
Decoding time: 16697us
Decoding time: 16660us
Decoding time: 16722us
Decoding time: 16691us
Decoding time: 16694us
Decoding time: 16657us
Decoding time: 16673us
Decoding time: 16691us
Decoding time: 16697us
Decoding time: 16685us
Decoding time: 16710us
Decoding time: 16704us
Decoding time: 16721us
Decoding time: 16714us
Decoding time: 16700us
Decoding time: 16665us
Decoding time: 16698us
Decoding time: 16646us
Decoding time: 16701us
Decoding time: 16666us
Decoding time: 16705us
Decoding time: 16695us
Decoding time: 16698us
Decoding time: 16679us
Decoding time: 16709us
Decoding time: 16676us
Decoding time: 16700us
Decoding time: 16676us
Decoding time: 16711us
Decoding time: 16695us
Decoding time: 16715us
Decoding time: 16648us
Decoding time: 16656us
Decoding time: 16674us
Decoding time: 16644us
Decoding time: 16666us
Decoding time: 16712us
Decoding time: 16694us
Decoding time: 16672us
Decoding time: 16656us
Decoding time: 16647us
Decoding time: 16670us
Decoding time: 16683us
Decoding time: 16690us
Decoding time: 16666us
Decoding time: 16671us
Decoding time: 16688us
Decoding time: 16671us
Decoding time: 16678us
Decoding time: 16697us
Decoding time: 16711us
Decoding time: 16716us
Decoding time: 16699us
Decoding time: 16658us
Decoding time: 16656us
Decoding time: 16691us
Decoding time: 16667us
Decoding time: 16680us
Decoding time: 16693us
Decoding time: 16711us
Decoding time: 16687us
Decoding time: 16665us
Decoding time: 16705us
Decoding time: 16684us
Decoding time: 16721us
Decoding time: 16709us
Decoding time: 16685us
Decoding time: 16601us
Decoding time: 16716us
Decoding time: 16668us
Decoding time: 16702us
Decoding time: 16692us
Decoding time: 16659us
Decoding time: 16679us
Decoding time: 16721us
Decoding time: 16669us
Decoding time: 16708us
Decoding time: 16688us
Decoding time: 16690us
Decoding time: 16683us
Decoding time: 16688us
Decoding time: 16651us
Decoding time: 16674us
Decoding time: 16665us
Decoding time: 16679us
Decoding time: 16695us
Decoding time: 16713us
Decoding time: 16679us
Decoding time: 16660us
Decoding time: 16672us
Decoding time: 16676us
Decoding time: 16716us
Decoding time: 16677us
Decoding time: 16673us
Decoding time: 16683us
Decoding time: 16675us
Decoding time: 16702us
Decoding time: 16694us
Decoding time: 16704us
Decoding time: 16646us
Decoding time: 16674us
Decoding time: 16691us
Decoding time: 16694us
Decoding time: 16713us
Decoding time: 16654us
Decoding time: 16725us
Decoding time: 16694us
Decoding time: 16721us
Decoding time: 16699us
Decoding time: 16682us
Decoding time: 16685us
Decoding time: 16690us
Decoding time: 16709us
Decoding time: 16695us
Decoding time: 16696us
Decoding time: 16692us
Decoding time: 16681us
Decoding time: 16647us
Decoding time: 16696us
Decoding time: 16643us
Decoding time: 16677us
Decoding time: 16675us
Decoding time: 16671us
Decoding time: 16693us
Decoding time: 16719us
Decoding time: 16689us
Decoding time: 16674us
Decoding time: 16650us
Decoding time: 16684us
Decoding time: 15893us
Decoding time: 16692us
Decoding time: 16655us
Decoding time: 15942us
Decoding time: 16672us
Decoding time: 15915us
Decoding time: 16639us
Decoding time: 16669us
Decoding time: 16662us
Decoding time: 16675us
Decoding time: 16635us
Decoding time: 16631us
Decoding time: 16693us
Decoding time: 16634us
Decoding time: 16681us
Decoding time: 16590us
Decoding time: 16647us
Decoding time: 16630us
Decoding time: 16644us
Decoding time: 16679us
Decoding time: 16694us
Decoding time: 16677us
Decoding time: 16654us
Decoding time: 16682us
Decoding time: 16647us
Decoding time: 16652us
Decoding time: 16606us
Decoding time: 16681us
Decoding time: 16669us
Decoding time: 16674us
Decoding time: 16628us
Decoding time: 16676us
Decoding time: 16658us
Decoding time: 16634us
Decoding time: 16617us
Decoding time: 16629us
Decoding time: 16665us
Decoding time: 16666us
Decoding time: 16679us
Decoding time: 16667us
Decoding time: 16671us
Decoding time: 16647us
Decoding time: 16658us
Decoding time: 16667us
Decoding time: 16689us
Decoding time: 16690us
Decoding time: 16660us
Decoding time: 16659us
Decoding time: 16630us
Decoding time: 16688us
Decoding time: 16661us
Decoding time: 16643us
Decoding time: 16688us
Decoding time: 16655us
Decoding time: 16678us
Decoding time: 16647us
Decoding time: 16675us
Decoding time: 16717us
Decoding time: 16685us
Decoding time: 16662us
Decoding time: 16652us
Decoding time: 16658us
Decoding time: 16661us
Decoding time: 15921us
Decoding time: 15971us
Decoding time: 16720us
Decoding time: 15962us
Decoding time: 16675us
Decoding time: 16655us
Decoding time: 16655us
Decoding time: 16681us
Decoding time: 16685us
Decoding time: 15941us
Decoding time: 16708us
Decoding time: 16676us
Decoding time: 16698us
Decoding time: 16447us
Decoding time: 16673us
Decoding time: 16664us
Decoding time: 16678us
Decoding time: 16685us
Decoding time: 16678us
Decoding time: 16699us
Decoding time: 16651us
Decoding time: 16664us
Decoding time: 16701us
Decoding time: 16694us
Decoding time: 16653us
Decoding time: 16662us
Decoding time: 16649us
Decoding time: 16680us
Decoding time: 16665us
Decoding time: 16681us
Decoding time: 15973us
Decoding time: 16706us
Decoding time: 15954us
Decoding time: 16630us
Decoding time: 15940us
Decoding time: 16721us
Decoding time: 16685us
Decoding time: 16701us
Decoding time: 16662us
Decoding time: 16694us
Decoding time: 16743us
Decoding time: 16671us
Decoding time: 15894us
Decoding time: 16684us
Decoding time: 15889us
Decoding time: 16683us
Decoding time: 16657us
Decoding time: 16696us
Decoding time: 16650us
Decoding time: 16689us
Decoding time: 16659us
Decoding time: 16666us
Decoding time: 16680us
Decoding time: 16668us
Decoding time: 16669us
Decoding time: 16648us
Decoding time: 16678us
Decoding time: 16689us
Decoding time: 16644us
Decoding time: 16682us
Decoding time: 16685us
Decoding time: 16700us
Decoding time: 16698us
Decoding time: 16661us
Decoding time: 16731us
Decoding time: 16673us
Decoding time: 16724us
Decoding time: 16702us
Decoding time: 16656us
Decoding time: 16676us
Decoding time: 16689us
Decoding time: 16702us
Decoding time: 16689us
Decoding time: 16641us
Decoding time: 16657us
Decoding time: 16724us
Decoding time: 16696us
Decoding time: 16688us
Decoding time: 16706us
Decoding time: 16705us
Decoding time: 15925us
Decoding time: 16657us
Decoding time: 15867us
Decoding time: 16698us
Decoding time: 26549us
Decoding time: 16658us
Decoding time: 16698us
Decoding time: 16691us
Decoding time: 16678us
Decoding time: 16686us
Decoding time: 16692us
Decoding time: 16653us
Decoding time: 16676us
Decoding time: 16676us
Decoding time: 16707us
Decoding time: 16677us
Decoding time: 16691us
Decoding time: 16676us
Decoding time: 16670us
Decoding time: 16671us
Decoding time: 16657us
Decoding time: 16710us
Decoding time: 16697us
Decoding time: 16683us
Decoding time: 16660us
Decoding time: 16650us
Decoding time: 16663us
Decoding time: 16697us
Decoding time: 16720us
Decoding time: 16678us
Decoding time: 16704us
Decoding time: 16668us
Decoding time: 16723us
Decoding time: 16679us
Decoding time: 16689us
Decoding time: 16688us
Decoding time: 16705us
Decoding time: 16667us
Decoding time: 16676us
Decoding time: 16695us
Decoding time: 16731us
Decoding time: 16692us
Decoding time: 16694us
Decoding time: 16684us
Decoding time: 16702us
Decoding time: 16696us
Decoding time: 16679us
Decoding time: 16685us
Decoding time: 16703us
Decoding time: 16699us
Decoding time: 16698us
Decoding time: 16659us
Decoding time: 16683us
Decoding time: 16677us
Decoding time: 16627us
Decoding time: 16672us
Decoding time: 16657us
Decoding time: 16690us
Decoding time: 16699us
Decoding time: 16668us
Decoding time: 16668us
Decoding time: 16683us
Decoding time: 16642us
Decoding time: 16668us
Decoding time: 16692us
Decoding time: 16662us
Decoding time: 16577us
Decoding time: 16590us
Decoding time: 16568us
Decoding time: 16540us
Evaluation @iter 100000 done in 177 secs
TVL Loss   : 
TVL MS-SSIM: 0.93155
TVL PSNR   : 31.55918
